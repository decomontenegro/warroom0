#!/bin/bash

echo "üöÄ Configura√ß√£o R√°pida do Claude Opus 3"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Verificar API key atual
CURRENT_KEY=$(grep OPENROUTER_API_KEY .env | cut -d'=' -f2)
CURRENT_MODEL=$(grep OPENROUTER_MODEL .env | cut -d'=' -f2)

echo "üìä Configura√ß√£o Atual:"
echo "   Modelo: ${YELLOW}$CURRENT_MODEL${NC}"
echo "   API Key: ${YELLOW}${CURRENT_KEY:0:20}...${NC}"
echo ""

# Menu de op√ß√µes
echo "üéØ O que voc√™ deseja fazer?"
echo ""
echo "1) Usar Claude Opus 3 (mais poderoso, mais caro)"
echo "2) Usar Claude Sonnet 3 (balanceado)"
echo "3) Usar Claude Haiku 3 (r√°pido e barato)"
echo "4) Usar GPT-4 Turbo"
echo "5) Apenas atualizar a API Key"
echo ""

read -p "Escolha uma op√ß√£o (1-5): " choice

case $choice in
    1)
        MODEL="anthropic/claude-3-opus"
        echo -e "${GREEN}‚úÖ Configurando Claude Opus 3${NC}"
        ;;
    2)
        MODEL="anthropic/claude-3-sonnet"
        echo -e "${GREEN}‚úÖ Configurando Claude Sonnet 3${NC}"
        ;;
    3)
        MODEL="anthropic/claude-3-haiku"
        echo -e "${GREEN}‚úÖ Configurando Claude Haiku 3${NC}"
        ;;
    4)
        MODEL="openai/gpt-4-turbo"
        echo -e "${GREEN}‚úÖ Configurando GPT-4 Turbo${NC}"
        ;;
    5)
        MODEL=$CURRENT_MODEL
        echo -e "${GREEN}‚úÖ Mantendo modelo atual: $MODEL${NC}"
        ;;
    *)
        echo -e "${RED}‚ùå Op√ß√£o inv√°lida${NC}"
        exit 1
        ;;
esac

echo ""
echo "üìù Agora voc√™ precisa de uma API Key v√°lida do OpenRouter"
echo ""
echo "Para obter uma chave:"
echo "1. Acesse ${YELLOW}https://openrouter.ai/${NC}"
echo "2. Crie uma conta ou fa√ßa login"
echo "3. V√° em ${YELLOW}API Keys${NC}"
echo "4. Clique em ${YELLOW}Create API Key${NC}"
echo "5. Copie a chave (come√ßa com sk-or-v1-)"
echo ""

read -p "Cole sua API Key aqui (ou Enter para manter atual): " NEW_KEY

if [ ! -z "$NEW_KEY" ]; then
    # Validar formato da chave
    if [[ ! $NEW_KEY =~ ^sk-or-v1- ]]; then
        echo -e "${RED}‚ùå Formato inv√°lido. A chave deve come√ßar com 'sk-or-v1-'${NC}"
        exit 1
    fi
    
    # Fazer backup
    cp .env .env.backup
    echo -e "${GREEN}‚úÖ Backup criado: .env.backup${NC}"
    
    # Atualizar API key
    sed -i '' "s/^OPENROUTER_API_KEY=.*/OPENROUTER_API_KEY=$NEW_KEY/" .env
    echo -e "${GREEN}‚úÖ API Key atualizada${NC}"
fi

# Atualizar modelo
sed -i '' "s/^OPENROUTER_MODEL=.*/OPENROUTER_MODEL=$MODEL/" .env
echo -e "${GREEN}‚úÖ Modelo configurado: $MODEL${NC}"

# Mostrar custos estimados
echo ""
echo "üí∞ Custos Estimados por An√°lise UltraThink:"
case $MODEL in
    "anthropic/claude-3-opus")
        echo "   ~$0.10-0.20 por an√°lise completa"
        echo "   ${YELLOW}‚ö†Ô∏è  Este √© o modelo mais caro${NC}"
        ;;
    "anthropic/claude-3-sonnet")
        echo "   ~$0.03-0.06 por an√°lise completa"
        ;;
    "anthropic/claude-3-haiku")
        echo "   ~$0.01-0.02 por an√°lise completa"
        echo "   ${GREEN}‚úÖ Melhor custo-benef√≠cio${NC}"
        ;;
    "openai/gpt-4-turbo")
        echo "   ~$0.05-0.10 por an√°lise completa"
        ;;
esac

# Testar configura√ß√£o
echo ""
echo "üß™ Testando nova configura√ß√£o..."
echo ""

node fix-ai-responses.js

echo ""
echo "üéâ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìå Pr√≥ximos passos:"
echo "1. ${YELLOW}Reinicie o servidor${NC} (Ctrl+C e npm run dev)"
echo "2. Acesse o WarRoom"
echo "3. Fa√ßa uma pergunta para testar"
echo ""
echo "üí° Dica: Pergunte algo complexo como:"
echo "   'Como implementar um sistema de microservi√ßos com event sourcing?'"